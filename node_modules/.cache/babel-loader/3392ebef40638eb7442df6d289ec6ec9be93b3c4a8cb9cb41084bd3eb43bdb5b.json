{"ast":null,"code":"var _jsxFileName = \"D:\\\\dashboard\\\\src\\\\components\\\\MetricCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MetricCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricCard = ({\n  metric,\n  delay = 0\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, delay * 1000);\n    return () => clearTimeout(timer);\n  }, [delay]);\n  const handleClick = () => {\n    setIsLoading(true);\n    // Simulate API call or action\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `metric-card ${metric.color} ${isVisible ? 'fade-in-up' : ''} ${isLoading ? 'loading' : ''}`,\n    style: {\n      '--delay': `${delay}s`\n    },\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: metric.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-value\",\n      children: [metric.value, isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-label\",\n      children: metric.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), metric.trend && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `metric-trend ${metric.trend.startsWith('+') ? 'positive' : 'negative'}`,\n      children: metric.trend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MetricCard, \"Zeilzz5jB2Od/ztQrr9PZnxmaOg=\");\n_c = MetricCard;\nexport default MetricCard;\nvar _c;\n$RefreshReg$(_c, \"MetricCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MetricCard","metric","delay","_s","isVisible","setIsVisible","isLoading","setIsLoading","timer","setTimeout","clearTimeout","handleClick","className","color","style","onClick","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","value","title","trend","startsWith","_c","$RefreshReg$"],"sources":["D:/dashboard/src/components/MetricCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MetricCard.css';\r\n\r\nconst MetricCard = ({ metric, delay = 0 }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsVisible(true);\r\n    }, delay * 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [delay]);\r\n\r\n  const handleClick = () => {\r\n    setIsLoading(true);\r\n    // Simulate API call or action\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`metric-card ${metric.color} ${isVisible ? 'fade-in-up' : ''} ${isLoading ? 'loading' : ''}`}\r\n      style={{ '--delay': `${delay}s` }}\r\n      onClick={handleClick}\r\n    >\r\n      <div className=\"metric-icon\">\r\n        <i className={metric.icon}></i>\r\n      </div>\r\n      <div className=\"metric-value\">\r\n        {metric.value}\r\n        {isLoading && <div className=\"loading-spinner small\"></div>}\r\n      </div>\r\n      <div className=\"metric-label\">{metric.title}</div>\r\n      {metric.trend && (\r\n        <div className={`metric-trend ${metric.trend.startsWith('+') ? 'positive' : 'negative'}`}>\r\n          {metric.trend}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAEH,KAAK,GAAG,IAAI,CAAC;IAEhB,OAAO,MAAMQ,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBJ,YAAY,CAAC,IAAI,CAAC;IAClB;IACAE,UAAU,CAAC,MAAM;MACfF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACER,OAAA;IACEa,SAAS,EAAE,eAAeX,MAAM,CAACY,KAAK,IAAIT,SAAS,GAAG,YAAY,GAAG,EAAE,IAAIE,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IACxGQ,KAAK,EAAE;MAAE,SAAS,EAAE,GAAGZ,KAAK;IAAI,CAAE;IAClCa,OAAO,EAAEJ,WAAY;IAAAK,QAAA,gBAErBjB,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAI,QAAA,eAC1BjB,OAAA;QAAGa,SAAS,EAAEX,MAAM,CAACgB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACNtB,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAI,QAAA,GAC1Bf,MAAM,CAACqB,KAAK,EACZhB,SAAS,iBAAIP,OAAA;QAAKa,SAAS,EAAC;MAAuB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNtB,OAAA;MAAKa,SAAS,EAAC,cAAc;MAAAI,QAAA,EAAEf,MAAM,CAACsB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACjDpB,MAAM,CAACuB,KAAK,iBACXzB,OAAA;MAAKa,SAAS,EAAE,gBAAgBX,MAAM,CAACuB,KAAK,CAACC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;MAAAT,QAAA,EACtFf,MAAM,CAACuB;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIH,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}